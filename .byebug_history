c
project.id
project.pledged
project
c
project.pledged
c
project.pledged
project
c
project.backings.sum(:pledge_amt)
project.backings
project.pledged
project
c
@project
c
User.all.length
User.last
User.all
user
n
user
params
prams
c
cc
c
project.creator
c
project
c
n
project
n
project
n
c
    user = User.find_by_username(username)username = params[:project][:creator_name]
username = params[:project][:creator_name]
c
n
@project_backing
c
Project.where({category: search_category})
Project.where({:category => search_category})
Project.where({category => search_category})
Project.where({category => "chemistry"})
Project.where({category = "chemistry"})
Project.where({category: "chemistry"})
Project.where(category: "chemistry")
category.downcase
category
SELECT "projects".* from "projects"
SELECT projects.* from projects
filtered_projects
c
filtered_projects
c
n
Project.filter(params[:query])
params[:query]
@projects
n
c
n
@projects
n
c
params[:query]
c
params[:query]
params
c
paramsc
params[:data]
params["data"]
params.data
params.keys
params[:query]
params
c
params
c
@project
n
c
n
@project
@project["creator_id"] = user.id
@project[creator_id] = user.id
@project[creator_id]
c
user.id
user
c
username
c
@project.errors.full_messages
@project
c
project_params
c
n
params
c
params
c
cc
c
exit
continue
c
@projects.last.creator
@projects.last
@projects.each do |project| puts project.creator.username end
project.creator
project
@projects.each do |project| puts project.creator end
project.creator
project
@projects
c
params
c
params
@project
c
params
c
@project.creator
@project
c
@project.project_category
@project.backers
@project.backings
@project.id
@project.creator
@project
c
n
arguments
n
ret
n
user
n
User.find_by_credentials(params[:user][:username], params[:user][:password])
params
c
n
signed_in?
c
n
current_user
n
current_user
c
n
payload
n
value
n
env
n
ret
super
ret
n
args
*args
method
n
current_user
c
params
c
User.find_by_credentials(params[:username], params[:password])
params
c
params
c
params
user
c
flash.now[:errors]
@user.errors.full_messages
@user.errors
@user
n
